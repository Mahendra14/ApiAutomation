---
swagger: "2.0"
info:
  description: "APIs to get Business Events generated in OPERA Cloud.<br /><br /><p>This\
    \ document and all content within is available under the Universal Permissive\
    \ License v 1.0 (http://oss.oracle.com/licenses/upl). Copyright c 2021 Oracle\
    \ and/or its affiliates.</p>"
  version: "21.1"
  title: "Early Release OPERA Cloud Integration Processor API"
  termsOfService: "https://www.oracle.com/legal/terms.html"
  contact:
    email: "hospitality_apis_ww_grp@oracle.com"
  license:
    name: "UPL"
    url: "https://opensource.org/licenses/upl"
basePath: "/int/v0"
tags:
- name: "IntegrationProcessor"
  description: "The Integration Processor Service provides a set of operations which\
    \ help the external customers and vendors to process Business Events generated\
    \ in OPERA."
schemes:
- "https"
produces:
- "application/json"
paths:
  /externalSystem/{extSystemCode}/businessEvents:
    get:
      tags:
      - "IntegrationProcessor"
      summary: "Get business events"
      description: "Business Event messages will sit in a queue.  Use this API to\
        \ fetch the Business Event messages based on hotel ID and External System.\
        \  You will need to pass the External System in the HTTP Header parameters.\
        \ <p><strong>OperationId:</strong>getBusinessEventsByExternalSystem</p>"
      operationId: "getBusinessEventsByExternalSystem"
      parameters:
      - name: "extSystemCode"
        in: "path"
        description: "External system code which will be used to dequeue the events"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "limit"
        in: "query"
        description: "Number of messages web service should dequeue from the BE queue."
        required: false
        type: "integer"
        default: 1
      - name: "authorization"
        in: "header"
        description: "Bearer token that needs to be passed which is generated post\
          \ user authentication"
        required: true
        type: "string"
      - name: "x-app-key"
        in: "header"
        description: "Client or Partner’s Application Key"
        required: true
        type: "string"
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
      - name: "x-hotelid"
        in: "header"
        description: "Mandatory parameter to identify the hotel code where the end\
          \ user is logged in"
        required: true
        type: "string"
      - name: "x-externalsystem"
        in: "header"
        description: "External system code."
        required: false
        type: "string"
        maxLength: 80
        x-example: ""
      - name: "Accept-Language"
        in: "header"
        description: "Language code"
        required: false
        type: "string"
      responses:
        "200":
          description: "Provides business event message dequeued from BE queue as\
            \ response"
          examples:
            application/json:
              businessEventData:
              - businessEvent:
                  header:
                    moduleName: 14
                    actionType: "UPDATE PROFILE"
                    actionId: "561139"
                    primaryKey: "42212"
                    publisherId: "18371"
                    createdDateTime: "2019-11-24 21:30:52.0"
                    hotelId: "HOTEL1"
                  details:
                  - dataElement: "FIRST NAME"
                  - dataElement: "NAME"
                    oldValue: "Safe Travel"
                    newValue: "Safe Travel One"
                  - dataElement: "IATA NUMBER"
                    newValue: "355453"
                  - dataElement: "EMAIL"
                    oldValue: "info@example.com"
                    newValue: "contactus@example.com"
                  - dataElement: "WEBPAGE"
                businessEventId:
                  id: "1971132"
              - businessEvent:
                  header:
                    moduleName: 14
                    actionType: "NEW PROFILE"
                    actionId: "561141"
                    primaryKey: "494139"
                    publisherId: "27234"
                    createdDateTime: "2019-11-24 21:43:59.0"
                    hotelId: "HOTEL1"
                  details:
                  - dataElement: "FIRST NAME"
                    newValue: "William"
                  - dataElement: "EMAIL YN"
                    newValue: "N"
                  - dataElement: "WEBPAGE"
                businessEventId:
                  id: "1971133"
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
          schema:
            $ref: "#/definitions/businessEvents"
        "204":
          description: "BusinessEventsByExternalSystem not found."
  /externalSystem/{extSystemCode}/hotels/{hotelId}/businessEvents:
    get:
      tags:
      - "IntegrationProcessor"
      summary: "Get business events by hotel ID"
      description: "Business Event messages will sit in a queue.  Use this API to\
        \ fetch the Business Event messages based on user access.  You will need to\
        \ pass the External System in the HTTP Header parameters. <p><strong>OperationId:</strong>getBusinessEvents</p>"
      operationId: "getBusinessEvents"
      parameters:
      - name: "hotelId"
        in: "path"
        description: "Unique OPERA Hotel code"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        description: "External system code which will be used to dequeue the events."
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "limit"
        in: "query"
        description: "Number of messages web service should dequeue from the BE queue."
        required: false
        type: "integer"
        default: 1
      - name: "authorization"
        in: "header"
        description: "Bearer token that needs to be passed which is generated post\
          \ user authentication"
        required: true
        type: "string"
      - name: "x-app-key"
        in: "header"
        description: "Client or Partner’s Application Key"
        required: true
        type: "string"
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
      - name: "x-hotelid"
        in: "header"
        description: "Mandatory parameter to identify the hotel code where the end\
          \ user is logged in"
        required: true
        type: "string"
      - name: "x-externalsystem"
        in: "header"
        description: "External system code."
        required: false
        type: "string"
        maxLength: 80
        x-example: ""
      - name: "Accept-Language"
        in: "header"
        description: "Language code"
        required: false
        type: "string"
      responses:
        "200":
          description: "Provides business event message dequeued from BE queue as\
            \ response"
          examples:
            application/json:
              businessEventData:
              - businessEvent:
                  header:
                    moduleName: 14
                    actionType: "UPDATE PROFILE"
                    actionId: "561139"
                    primaryKey: "42212"
                    publisherId: "18371"
                    createdDateTime: "2019-11-24 21:30:52.0"
                    hotelId: "HOTEL1"
                  details:
                  - dataElement: "FIRST NAME"
                  - dataElement: "NAME"
                    oldValue: "Safe Travel"
                    newValue: "Safe Travel One"
                  - dataElement: "IATA NUMBER"
                    newValue: "355453"
                  - dataElement: "EMAIL"
                    oldValue: "info@example.com"
                    newValue: "contactus@example.com"
                  - dataElement: "WEBPAGE"
                businessEventId:
                  id: "1971132"
              - businessEvent:
                  header:
                    moduleName: 14
                    actionType: "NEW PROFILE"
                    actionId: "561141"
                    primaryKey: "494139"
                    publisherId: "27234"
                    createdDateTime: "2019-11-24 21:43:59.0"
                    hotelId: "HOTEL1"
                  details:
                  - dataElement: "FIRST NAME"
                    newValue: "William"
                  - dataElement: "EMAIL YN"
                    newValue: "N"
                  - dataElement: "WEBPAGE"
                businessEventId:
                  id: "1971133"
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
          schema:
            $ref: "#/definitions/businessEvents"
        "204":
          description: "BusinessEvents not found."
definitions:
  businessEvents:
    type: "object"
    properties:
      businessEventData:
        type: "array"
        description: "List of BusinessEvents dequeued for given external system"
        items:
          $ref: "#/definitions/businessEventDataType"
      links:
        type: "array"
        items:
          $ref: "#/definitions/instanceLink"
      warnings:
        $ref: "#/definitions/warningsType"
    description: "Provides business event message dequeued from BE queue as response"
  businessEventDataType:
    type: "object"
    properties:
      businessEvent:
        description: "Business event type."
        $ref: "#/definitions/businessEventType"
      businessEventId:
        description: "Unique identifier of the Business Event ID"
        $ref: "#/definitions/businessEventIDType"
  businessEventType:
    type: "object"
    properties:
      header:
        description: "Business event header type."
        $ref: "#/definitions/businessEventHeaderType"
      details:
        description: "Business event details collection."
        $ref: "#/definitions/businessEventDetailsType"
  businessEventHeaderType:
    type: "object"
    properties:
      moduleName:
        description: "Business event module name."
        $ref: "#/definitions/businessEventModuleType"
      actionType:
        type: "string"
        description: "Business event action type, such as new reservation, update\
          \ profile, etc."
        maxLength: 2000
      actionId:
        type: "number"
        description: "Unique action instance id of the business event, uniqueness\
          \ is guaranteed intra-module only."
      primaryKey:
        type: "string"
        description: "Primary key value of the business event, such as resv name id,\
          \ allotment header id, name id etc."
        maxLength: 2000
      parentActionId:
        type: "number"
        description: "Action instance id of the parent business event, if the action\
          \ triggered this event was a side effect of another action."
      publisherId:
        type: "number"
        description: "Internal id of the application or system user that triggered\
          \ this event."
      createdDateTime:
        type: "string"
        format: "date-time"
        description: "Timestamp of the business event."
      hotelId:
        type: "string"
        description: "The property this business event is associated with."
        minLength: 0
        maxLength: 20
  businessEventModuleType:
    type: "string"
    enum:
    - "Activity"
    - "Availability"
    - "Block"
    - "BlockOffsets"
    - "Cashiering"
    - "Catering"
    - "CateringNotes"
    - "Configuration"
    - "ECertificate"
    - "Enrollment"
    - "Housekeeping"
    - "MrEnrollment"
    - "NightAudit"
    - "OwnerContract"
    - "Profile"
    - "Rate"
    - "Reservation"
    - "StayRecords"
  businessEventDetailsType:
    type: "array"
    items:
      $ref: "#/definitions/businessEventDetailType"
    maxItems: 4000
  businessEventDetailType:
    type: "object"
    properties:
      dataElement:
        type: "string"
        description: "Name of the data element, such as arrival date, departure date,\
          \ etc."
        maxLength: 2000
      oldValue:
        type: "string"
        description: "Value of the element when this action took place. In case of\
          \ date values, format used is YYYY-MM-DD."
        maxLength: 2000
      newValue:
        type: "string"
        description: "Value of the element after this action took place. In case of\
          \ date values, format used is YYYY-MM-DD."
        maxLength: 2000
      scopeFrom:
        type: "string"
        format: "date"
        description: "Begin date from when this value is applicable, such as daily\
          \ element date, block grid date etc."
      scopeTo:
        type: "string"
        format: "date"
        description: "End date till when this value is applicable, such as daily element\
          \ date, block grid date etc."
  businessEventIDType:
    type: "object"
    properties:
      type:
        type: "string"
        description: "A reference to the type of object defined by the UniqueID element."
        minLength: 0
        maxLength: 20
      idContext:
        type: "string"
        description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        minLength: 0
        maxLength: 80
      id:
        type: "string"
        description: "A unique identifying value assigned by the creating system.\
          \ The ID attribute may be used to reference a primary-key value within a\
          \ database or in a particular implementation."
        minLength: 0
        maxLength: 80
    description: "An identifier used to uniquely reference an object in a system (e.g.\
      \ an airline reservation reference, customer profile reference, booking confirmation\
      \ number, or a reference to a previous availability quote)."
  instanceLink:
    type: "object"
    required:
    - "href"
    - "method"
    - "operationId"
    - "rel"
    properties:
      href:
        type: "string"
        description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
          \ to URI Template, then the \"templated\" property must be set to true."
      rel:
        type: "string"
        description: "Name of the link relation that, in addition to the type property,\
          \ can be used to retrieve link details. For example, href or profile."
      templated:
        type: "boolean"
        description: "Boolean flag that specifies that \"href\" property is a URI\
          \ or URI Template. If the property is a URI template, set this value to\
          \ true. By default, this value is false."
        default: false
      method:
        type: "string"
        description: "HTTP method for requesting the target of the link."
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "DELETE"
        - "PATCH"
        - "OPTIONS"
        - "HEAD"
      targetSchema:
        type: "string"
        description: "Link to the metadata of the resource, such as JSON-schema, that\
          \ describes the resource expected when dereferencing the target resource.."
      operationId:
        type: "string"
        description: "The operationId of the path you can call to follow this link.\
          \  This allows you to look up not only the path and method, but the description\
          \ of that path and any parameters you need to supply."
      title:
        type: "string"
        description: "Exact copy of the \"summary\" field on the linked operation."
    description: "Metadata describing link description objects that MAY appear in\
      \ the JSON instance representation."
  warningsType:
    type: "array"
    description: "Used in conjunction with the Success element to define a business\
      \ error."
    items:
      $ref: "#/definitions/warningType"
    maxItems: 4000
  warningType:
    type: "object"
    properties:
      value:
        type: "string"
        description: "Property Value"
      shortText:
        type: "string"
        description: "An abbreviated version of the error in textual format."
        maxLength: 2000
      code:
        type: "string"
        description: "If present, this refers to a table of coded values exchanged\
          \ between applications to identify errors or warnings."
        minLength: 0
        maxLength: 20
      docURL:
        type: "string"
        description: "If present, this URL refers to an online description of the\
          \ error that occurred."
        maxLength: 2000
      status:
        type: "string"
        description: "If present, recommended values are those enumerated in the ErrorRS,\
          \ (NotProcessed Incomplete Complete Unknown) however, the data type is designated\
          \ as string data, recognizing that trading partners may identify additional\
          \ status conditions not included in the enumeration."
        maxLength: 2000
      tag:
        type: "string"
        description: "If present, this attribute may identify an unknown or misspelled\
          \ tag that caused an error in processing. It is recommended that the Tag\
          \ attribute use XPath notation to identify the location of a tag in the\
          \ event that more than one tag of the same name is present in the document.\
          \ Alternatively, the tag name alone can be used to identify missing data\
          \ [Type=ReqFieldMissing]."
        maxLength: 2000
      recordId:
        type: "string"
        description: "If present, this attribute allows for batch processing and the\
          \ identification of the record that failed amongst a group of records. This\
          \ value may contain a concatenation of a unique failed transaction ID with\
          \ specific record(s) associated with that transaction."
        maxLength: 2000
      type:
        type: "string"
        description: "The Warning element MUST contain the Type attribute that uses\
          \ a recommended set of values to indicate the warning type. The validating\
          \ XSD can expect to accept values that it has NOT been explicitly coded\
          \ for and process them by using Type =\"Unknown\"."
        minLength: 0
        maxLength: 20
      language:
        type: "string"
        description: "Language identification."
        pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
      rph:
        type: "string"
        description: "Reference Place Holder used as an index for this warning."
        minLength: 1
        maxLength: 8
    description: "Used when a message has been successfully processed to report any\
      \ warnings or business errors that occurred."
  exceptionDetailType:
    type: "object"
    required:
    - "title"
    - "type"
    properties:
      type:
        type: "string"
        description: "Absolute URI [RFC3986] that identifies the problem type.  When\
          \ dereferenced, it SHOULD provide a human-readable summary of the problem\
          \ (for example, using HTML)."
      title:
        type: "string"
        description: "Short, human-readable summary of the problem.  The summary SHOULD\
          \ NOT change for subsequent occurrences of the problem, except for purposes\
          \ of localization."
      status:
        type: "integer"
        description: "HTTP status code for this occurrence of the problem, set by\
          \ the origin server."
      detail:
        type: "string"
        description: "Human-readable description specific to this occurrence of the\
          \ problem."
      instance:
        type: "string"
        description: "Absolute URI that identifies the specific occurrence of the\
          \ problem.  It may or may not provide additional information if dereferenced."
      o:errorCode:
        type: "string"
        description: "Application error code, which is different from HTTP error code."
      o:errorPath:
        type: "string"
        description: "Path to the problem at the resource or property level."
      o:errorDetails:
        type: "array"
        description: "Details of the error message, consisting of a hierarchical tree\
          \ structure."
        items:
          $ref: "#/definitions/errorInstance"
      links:
        $ref: "#/definitions/links"
    title: "Error Detail"
    description: "Complex type that contains error details for a REST call."
  errorInstance:
    type: "object"
    required:
    - "title"
    - "type"
    properties:
      type:
        type: "string"
        description: "Absolute URI [RFC3986] that identifies the problem type.  When\
          \ dereferenced, it SHOULD provide a human-readable summary of the problem\
          \ (for example, using HTML)."
      title:
        type: "string"
        description: "Short, human-readable summary of the problem.  The summary SHOULD\
          \ NOT change for subsequent occurrences of the problem, except for purposes\
          \ of localization."
      status:
        type: "integer"
        description: "HTTP status code for this occurrence of the problem, set by\
          \ the origin server."
      detail:
        type: "string"
        description: "Human-readable description specific to this occurrence of the\
          \ problem."
      instance:
        type: "string"
        description: "Absolute URI that identifies the specific occurrence of the\
          \ problem.  It may or may not provide additional information if dereferenced."
      o:errorCode:
        type: "string"
        description: "Application error code, which is different from HTTP error code."
      o:errorPath:
        type: "string"
        description: "Path to the problem at the resource or property level."
    title: "Error Instance Details"
    description: "Complex type that contains error instance details for a REST call."
  links:
    type: "array"
    items:
      $ref: "#/definitions/instanceLink"
parameters:
  authKey:
    name: "authorization"
    in: "header"
    description: "Bearer token that needs to be passed which is generated post user\
      \ authentication"
    required: true
    type: "string"
  x-app-key:
    name: "x-app-key"
    in: "header"
    description: "Client or Partner’s Application Key"
    required: true
    type: "string"
    pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
  x-hotelid:
    name: "x-hotelid"
    in: "header"
    description: "Mandatory parameter to identify the hotel code where the end user\
      \ is logged in"
    required: true
    type: "string"
  x-externalsystem:
    name: "x-externalsystem"
    in: "header"
    description: "External system code."
    required: false
    type: "string"
    maxLength: 80
    x-example: ""
  Accept-Language:
    name: "Accept-Language"
    in: "header"
    description: "Language code"
    required: false
    type: "string"
responses:
  "400":
    description: "Bad Request"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "401":
    description: "Unauthorized"
  "403":
    description: "Forbidden"
  "404":
    description: "Resource not found"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "405":
    description: "Method not allowed"
  "406":
    description: "Not acceptable."
  "413":
    description: "Request Entity Too Large"
  "414":
    description: "Request URI Too Large"
  "415":
    description: "Unsupported Media Type"
  "500":
    description: "System Error"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "502":
    description: "Bad Gateway"
  "503":
    description: "Service Unavailable"
externalDocs:
  description: "Find out more about Oracle Hospitality"
  url: "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
