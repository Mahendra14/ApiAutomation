---
swagger: "2.0"
info:
  description: "APIs to cater Inventory related asynchronous functionality in OPERA.\
    \ <p>This document and all content within is available under the Universal Permissive\
    \ License v 1.0 (http://oss.oracle.com/licenses/upl). Copyright c 2021 Oracle\
    \ and/or its affiliates.</p>"
  version: "20.99.99.99"
  title: "Early Release Opera Cloud Inventory Asynchronous API"
basePath: "/inv/async/v0"
tags:
- name: "InventoryAsync"
  description: "The Inventory Asynchronous module provides capability for an external\
    \ system to retrieve inventory related data using an asynchronous approach."
schemes:
- "https"
produces:
- "application/json"
paths:
  /externalSystems/{extSystemCode}/hotels/{hotelId}/revenueInventoryStatistics:
    post:
      tags:
      - "InventoryAsync"
      summary: "This API facilitates fetching revenue inventory statistics for a Hotel\
        \ by given dates."
      description: " <p><strong>OperationId:</strong>startRevenueInventoryStatisticsProcess</p>"
      operationId: "startRevenueInventoryStatisticsProcess"
      parameters:
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - in: "body"
        name: "criteria"
        description: "Request object for fetching revenue inventory statistics asynchronously."
        required: true
        schema:
          $ref: "#/definitions/revenueInventoryStatisticsSearchType"
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "202":
          description: "Location of process status resource"
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Location:
              type: "string"
              description: "Location of process status resource"
      x-interaction:
      - "async-polling"
    parameters: []
  /externalSystems/{extSystemCode}/hotels/{hotelId}/revenueInventoryStatistics/{requestId}:
    get:
      tags:
      - "InventoryAsync"
      summary: "This API returns a hotel's revenue inventory statistics for a scheduled\
        \ process."
      description: " <p><strong>OperationId:</strong>getRevenueInventoryStatistics</p>"
      operationId: "getRevenueInventoryStatistics"
      parameters:
      - name: "requestId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "200":
          description: "Response for fetched revenue inventory statistics."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
          schema:
            $ref: "#/definitions/revenueInventoryStatisticsDetails"
    head:
      tags:
      - "InventoryAsync"
      summary: "This API returns the status of asynchronous process scheduled for\
        \ given request id."
      description: " <p><strong>OperationId:</strong>getRevenueInventoryStatisticsProcessStatus</p>"
      operationId: "getRevenueInventoryStatisticsProcessStatus"
      parameters:
      - name: "requestId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "200":
          description: "Response for status of scheduled asynchronous process."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Status:
              type: "string"
              description: "Status of the requested process."
              enum:
              - "Processing"
              - "Invalid"
            Cache-Control:
              type: "string"
              description: "number of seconds to wait before polling again."
              x-example: "max-age=10"
        "201":
          description: "Response for status of scheduled asynchronous process."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Status:
              type: "string"
              description: "Status of the requested process."
              enum:
              - "Completed"
            Location:
              type: "string"
              description: "Location of newly created resource once the status of\
                \ process run is Complete."
    parameters: []
  /externalSystems/{extSystemCode}/hotels/{hotelId}/sellLimits:
    post:
      tags:
      - "InventoryAsync"
      summary: "Create sell limit by date."
      description: "You can use this API to create sell limits in OPERA by date. <p><strong>OperationId:</strong>postSellLimitsProcess</p>"
      operationId: "postSellLimitsProcess"
      parameters:
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - in: "body"
        name: "sellLimitsByDate"
        description: "Request for setting sell limits for house, room type, room class."
        required: true
        schema:
          $ref: "#/definitions/sellLimitsByDate"
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "202":
          description: "Location of process status resource"
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Location:
              type: "string"
              description: "Location of process status resource"
      x-interaction:
      - "async-polling"
    parameters: []
  /externalSystems/{extSystemCode}/hotels/{hotelId}/sellLimits/{requestId}:
    get:
      tags:
      - "InventoryAsync"
      summary: "Get status for sell limits for a property."
      description: " <p><strong>OperationId:</strong>getSellLimits</p>"
      operationId: "getSellLimits"
      parameters:
      - name: "requestId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "200":
          description: "This asynchronous callback base type is used as a base for\
            \ an extension for Opera Web Services Callback Requests to provide uniform\
            \ implementation."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
          schema:
            $ref: "#/definitions/sellLimitByDateStatus"
        "204":
          description: "SetSellLimitByDate not found."
    head:
      tags:
      - "InventoryAsync"
      summary: "This API returns the status of asynchronous process scheduled for\
        \ given id."
      description: " <p><strong>OperationId:</strong>getSellLimitsProcessStatus</p>"
      operationId: "getSellLimitsProcessStatus"
      parameters:
      - name: "requestId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "extSystemCode"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - name: "hotelId"
        in: "path"
        required: true
        type: "string"
        maxLength: 2000
        minLength: 1
      - $ref: "#/parameters/authKey"
      - $ref: "#/parameters/x-app-key"
      - $ref: "#/parameters/x-hotelid"
      - $ref: "#/parameters/Accept-Language"
      responses:
        "200":
          description: "Response for status of scheduled asynchronous process."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Status:
              type: "string"
              description: "Status of the requested process."
              enum:
              - "Processing"
              - "Invalid"
            Cache-Control:
              type: "string"
              description: "number of seconds to wait before polling again."
              x-example: "max-age=10"
        "201":
          description: "Response for status of scheduled asynchronous process."
          headers:
            Content-Language:
              type: "string"
              description: "Audience language"
              pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
              x-example: "en-GB"
            Status:
              type: "string"
              description: "Status of the requested process."
              enum:
              - "Completed"
            Location:
              type: "string"
              description: "Location of newly created resource once the status of\
                \ process run is Complete."
    parameters: []
definitions:
  exceptionDetailType:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Absolute URI [RFC3986] that identifies the problem type.  When\
          \ dereferenced, it SHOULD provide a human-readable summary of the problem\
          \ (for example, using HTML)."
      title:
        type: "string"
        description: "Short, human-readable summary of the problem.  The summary SHOULD\
          \ NOT change for subsequent occurrences of the problem, except for purposes\
          \ of localization."
      status:
        type: "integer"
        description: "HTTP status code for this occurrence of the problem, set by\
          \ the origin server."
      detail:
        type: "string"
        description: "Human-readable description specific to this occurrence of the\
          \ problem."
      instance:
        type: "string"
        description: "Absolute URI that identifies the specific occurrence of the\
          \ problem.  It may or may not provide additional information if dereferenced."
      o:errorCode:
        type: "string"
        description: "Application error code, which is different from HTTP error code."
      o:errorPath:
        type: "string"
        description: "Path to the problem at the resource or property level."
      o:errorDetails:
        type: "array"
        description: "Details of the error message, consisting of a hierarchical tree\
          \ structure."
        items:
          $ref: "#/definitions/errorInstance"
      links:
        $ref: "#/definitions/links"
    title: "Error Detail"
    description: "Complex type that contains error details for a REST call."
  errorInstance:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Absolute URI [RFC3986] that identifies the problem type.  When\
          \ dereferenced, it SHOULD provide a human-readable summary of the problem\
          \ (for example, using HTML)."
      title:
        type: "string"
        description: "Short, human-readable summary of the problem.  The summary SHOULD\
          \ NOT change for subsequent occurrences of the problem, except for purposes\
          \ of localization."
      status:
        type: "integer"
        description: "HTTP status code for this occurrence of the problem, set by\
          \ the origin server."
      detail:
        type: "string"
        description: "Human-readable description specific to this occurrence of the\
          \ problem."
      instance:
        type: "string"
        description: "Absolute URI that identifies the specific occurrence of the\
          \ problem.  It may or may not provide additional information if dereferenced."
      o:errorCode:
        type: "string"
        description: "Application error code, which is different from HTTP error code."
      o:errorPath:
        type: "string"
        description: "Path to the problem at the resource or property level."
    title: "Error Instance Details"
    description: "Complex type that contains error instance details for a REST call."
  instanceLink:
    type: "object"
    properties:
      href:
        type: "string"
        description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
          \ to URI Template, then the \"templated\" property must be set to true."
      rel:
        type: "string"
        description: "Name of the link relation that, in addition to the type property,\
          \ can be used to retrieve link details. For example, href or profile."
      templated:
        type: "boolean"
        description: "Boolean flag that specifies that \"href\" property is a URI\
          \ or URI Template. If the property is a URI template, set this value to\
          \ true. By default, this value is false."
        default: false
      method:
        type: "string"
        description: "HTTP method for requesting the target of the link."
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "DELETE"
        - "PATCH"
        - "OPTIONS"
        - "HEAD"
      targetSchema:
        type: "string"
        description: "Link to the metadata of the resource, such as JSON-schema, that\
          \ describes the resource expected when dereferencing the target resource.."
      operationId:
        type: "string"
        description: "The operationId of the path you can call to follow this link.\
          \  This allows you to look up not only the path and method, but the description\
          \ of that path and any parameters you need to supply."
      title:
        type: "string"
        description: "Exact copy of the \"summary\" field on the linked operation."
    description: "Metadata describing link description objects that MAY appear in\
      \ the JSON instance representation."
  links:
    type: "array"
    items:
      $ref: "#/definitions/instanceLink"
  revenueInventoryStatisticsSearchType:
    type: "object"
    properties:
      dateRangeStart:
        type: "string"
        format: "date"
        description: "The starting value of the date range."
      dateRangeEnd:
        type: "string"
        format: "date"
        description: "The ending value of the date range."
      roomTypes:
        type: "array"
        description: "The optional room types by which revenue and inventory statistics\
          \ will be grouped."
        items:
          type: "string"
          minLength: 0
          maxLength: 20
        maxItems: 4000
      marketCodes:
        type: "array"
        description: "The market codes for which revenue and inventory statistics\
          \ will be gathered."
        items:
          type: "string"
          minLength: 0
          maxLength: 20
        maxItems: 4000
      guaranteeCodes:
        type: "array"
        description: "The reservation guarantee codes for which revenue and inventory\
          \ statistics will be gathered."
        items:
          type: "string"
          minLength: 0
          maxLength: 20
        maxItems: 4000
      groupBy:
        type: "array"
        description: "Group by instructions for revenue inventory statistics that\
          \ can be used in request operation. Response data will be grouped according\
          \ to the values provided in this array. MarketCode and RoomType grouping\
          \ is used for past and future revenue and inventory statistics while GuaranteeType\
          \ is used only for future revenue and inventory statistics."
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "MarketCode"
          - "RoomType"
          - "GuaranteeType"
    description: "Fetch criteria type for fetching revenue inventory statistics."
  revenueInventoryStatisticsDetails:
    type: "array"
    description: "Revenue Inventory Statistics for the current occupancy date which\
      \ might include data grouped by room type, market and reservation guarantee\
      \ code."
    items:
      $ref: "#/definitions/revenueInventoryStatisticsType"
    maxItems: 4000
  revenueInventoryStatisticsType:
    type: "object"
    properties:
      physicalRooms:
        type: "integer"
        description: "The statistical figure for physical rooms."
      outOfOrderRooms:
        type: "integer"
        description: "The statistical figure for out of order rooms."
      outOfServiceRooms:
        type: "integer"
        description: "The statistical figure for out of service rooms."
      roomsSold:
        type: "integer"
        description: "The statistical figure for rooms sold."
      roomArrivals:
        type: "integer"
        description: "The statistical figure for arrival rooms."
      roomDepartures:
        type: "integer"
        description: "The statistical figure of departure rooms."
      cancelledRooms:
        type: "integer"
        description: "The statistical figure for canceled rooms."
      noShowRooms:
        type: "integer"
        description: "The statistical figure of no show rooms."
      roomRevenue:
        type: "number"
        description: "The statistical figure for room revenue."
      foodRevenue:
        type: "number"
        description: "The statistical figure for food revenue."
      totalRevenue:
        type: "number"
        description: "The statistical figure for total revenue."
      occupancyDate:
        type: "string"
        format: "date"
        description: "The occupancy date for which the revenue inventory statistics\
          \ are fetched."
      marketCode:
        type: "string"
        description: "The market code for which the revenue inventory statistics are\
          \ fetched."
        minLength: 0
        maxLength: 20
      roomType:
        type: "string"
        description: "The room type for which the revenue inventory statistics are\
          \ fetched."
        minLength: 0
        maxLength: 20
      guaranteeCode:
        type: "string"
        description: "The reservation guarantee code for which the revenue inventory\
          \ statistics are fetched."
        minLength: 0
        maxLength: 20
    description: "Revenue and statistics for an occupancy date and hotel code."
  warningsType:
    type: "array"
    description: "Used in conjunction with the Success element to define a business\
      \ error."
    items:
      $ref: "#/definitions/warningType"
    maxItems: 4000
  warningType:
    type: "object"
    properties:
      value:
        type: "string"
        description: "Property Value"
      shortText:
        type: "string"
        description: "An abbreviated version of the error in textual format."
        maxLength: 2000
      code:
        type: "string"
        description: "If present, this refers to a table of coded values exchanged\
          \ between applications to identify errors or warnings."
        minLength: 0
        maxLength: 20
      docURL:
        type: "string"
        description: "If present, this URL refers to an online description of the\
          \ error that occurred."
        maxLength: 2000
      status:
        type: "string"
        description: "If present, recommended values are those enumerated in the ErrorRS,\
          \ (NotProcessed Incomplete Complete Unknown) however, the data type is designated\
          \ as string data, recognizing that trading partners may identify additional\
          \ status conditions not included in the enumeration."
        maxLength: 2000
      tag:
        type: "string"
        description: "If present, this attribute may identify an unknown or misspelled\
          \ tag that caused an error in processing. It is recommended that the Tag\
          \ attribute use XPath notation to identify the location of a tag in the\
          \ event that more than one tag of the same name is present in the document.\
          \ Alternatively, the tag name alone can be used to identify missing data\
          \ [Type=ReqFieldMissing]."
        maxLength: 2000
      recordId:
        type: "string"
        description: "If present, this attribute allows for batch processing and the\
          \ identification of the record that failed amongst a group of records. This\
          \ value may contain a concatenation of a unique failed transaction ID with\
          \ specific record(s) associated with that transaction."
        maxLength: 2000
      type:
        type: "string"
        description: "The Warning element MUST contain the Type attribute that uses\
          \ a recommended set of values to indicate the warning type. The validating\
          \ XSD can expect to accept values that it has NOT been explicitly coded\
          \ for and process them by using Type =\"Unknown\"."
        minLength: 0
        maxLength: 20
      language:
        type: "string"
        description: "Language identification."
      rph:
        type: "string"
        description: "Reference Place Holder used as an index for this warning."
        minLength: 1
        maxLength: 8
    description: "Used when a message has been successfully processed to report any\
      \ warnings or business errors that occurred."
  sellLimitByDateStatus:
    type: "object"
    properties:
      warnings:
        description: "List of warnings that occurred."
        $ref: "#/definitions/warningsType"
      links:
        $ref: "#/definitions/links"
    description: "Response for sell limits status "
  sellLimitsByDate:
    type: "array"
    description: "Request for setting sell limits for house, room type, room class."
    items:
      $ref: "#/definitions/sellLimitByDateType"
    maxItems: 4000
  sellLimitByDateType:
    type: "object"
    properties:
      houseSellLimits:
        type: "array"
        description: "Collection of House level sell limit by the date."
        items:
          $ref: "#/definitions/houseSellLimitType"
        maxItems: 4000
      roomTypeSellLimits:
        type: "array"
        description: "Collection of Room type level sell limit by the date."
        items:
          $ref: "#/definitions/roomTypeSellLimitType"
        maxItems: 4000
      roomClassSellLimits:
        type: "array"
        description: "Collection of Room Class level sell limit by the date."
        items:
          $ref: "#/definitions/roomClassSellLimitType"
        maxItems: 4000
    description: "This type is used by sell limit request."
  houseSellLimitType:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date"
      amount:
        type: "number"
      flatOrPercentage:
        type: "string"
        description: "Indicates if sell limit is flat or percentage."
        enum:
        - "Flat"
        - "Percentage"
  roomClassSellLimitType:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date"
      amount:
        type: "number"
      flatOrPercentage:
        type: "string"
        description: "Indicates if sell limit is flat or percentage."
        enum:
        - "Flat"
        - "Percentage"
      roomClass:
        type: "string"
        minLength: 0
        maxLength: 20
  roomTypeSellLimitType:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date"
      amount:
        type: "number"
      flatOrPercentage:
        type: "string"
        description: "Indicates if sell limit is flat or percentage."
        enum:
        - "Flat"
        - "Percentage"
      roomType:
        type: "string"
        minLength: 0
        maxLength: 20
parameters:
  authKey:
    name: "authorization"
    in: "header"
    description: "Bearer token that needs to be passed which is generated post user\
      \ authentication"
    required: true
    type: "string"
  x-app-key:
    name: "x-app-key"
    in: "header"
    description: "Client or Partner's Application Key"
    required: true
    type: "string"
    pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
  x-hotelid:
    name: "x-hotelid"
    in: "header"
    description: "Mandatory parameter to identify the hotel code where the end user\
      \ is logged in"
    required: true
    type: "string"
  Accept-Language:
    name: "Accept-Language"
    in: "header"
    description: "Language code"
    required: false
    type: "string"
responses:
  "400":
    description: "Bad Request"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "401":
    description: "Unauthorized"
  "403":
    description: "Forbidden"
  "404":
    description: "Resource not found"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "405":
    description: "Method not allowed"
  "406":
    description: "Not acceptable."
  "413":
    description: "Request Entity Too Large"
  "414":
    description: "Request URI Too Large"
  "415":
    description: "Unsupported Media Type"
  "500":
    description: "System Error"
    schema:
      $ref: "#/definitions/exceptionDetailType"
  "502":
    description: "Bad Gateway"
  "503":
    description: "Service Unavailable"
